WARM Assembly of phase2SIMPLE.as                                        Page 1

Line [ Addr ]
0001           ; test 1: check immediate data  
0002 [0x0000]: one:    mov     r1,#1
     [0x0000]: 0x05880001 = 0b00000101100010000000000000000001
0003 [0x0001]:         mov     r0,r1
     [0x0001]: 0x05804040 = 0b00000101100000000100000001000000
0004 [0x0002]:         swi     #SysPutNum
     [0x0002]: 0x06800401 = 0b00000110100000000000010000000001
0005 [0x0003]:         mov     r0,#'\n
     [0x0003]: 0x05800205 = 0b00000101100000000000001000000101
0006 [0x0004]:         swi     #SysPutChar
     [0x0004]: 0x06800003 = 0b00000110100000000000000000000011
0007           ; test 2: add instruction
0008 [0x0005]: two:    mov     r1,#1
     [0x0005]: 0x05880001 = 0b00000101100010000000000000000001
0009 [0x0006]:         mov     r2,r1
     [0x0006]: 0x05904040 = 0b00000101100100000100000001000000
0010 [0x0007]:         add     r0,r1,r2
     [0x0007]: 0x0000c080 = 0b00000000000000001100000010000000
0011 [0x0008]:         swi     #SysPutNum
     [0x0008]: 0x06800401 = 0b00000110100000000000010000000001
0012 [0x0009]:         mov     r0,#'\n
     [0x0009]: 0x05800205 = 0b00000101100000000000001000000101
0013 [0x000a]:         swi     #SysPutChar
     [0x000a]: 0x06800003 = 0b00000110100000000000000000000011
0014           ; test 3: lsl immediate, nontrivial
0015 [0x000b]: three:  mov     r0,#1
     [0x000b]: 0x05800001 = 0b00000101100000000000000000000001
0016 [0x000c]:         add     r0,r0,r0,lsl #1
     [0x000c]: 0x00004001 = 0b00000000000000000100000000000001
0017 [0x000d]:         swi     #SysPutNum
     [0x000d]: 0x06800401 = 0b00000110100000000000010000000001
0018 [0x000e]:         mov     r0,#'\n
     [0x000e]: 0x05800205 = 0b00000101100000000000001000000101
0019 [0x000f]:         swi     #SysPutChar
     [0x000f]: 0x06800003 = 0b00000110100000000000000000000011
0020           ; test 4: div instructions, immediate encoding                   
0021 [0x0010]: four:   mov     r1,#4096
     [0x0010]: 0x05881801 = 0b00000101100010000001100000000001
0022 [0x0011]:         div     r0,r1,#1024
     [0x0011]: 0x05009401 = 0b00000101000000001001010000000001
0023 [0x0012]:         swi     #SysPutNum
     [0x0012]: 0x06800401 = 0b00000110100000000000010000000001
0024 [0x0013]:         mov     r0,#'\n
     [0x0013]: 0x05800205 = 0b00000101100000000000001000000101
0025 [0x0014]:         swi     #SysPutChar
     [0x0014]: 0x06800003 = 0b00000110100000000000000000000011
0026           
0027 [0x0015]: five:   mov     r0, #3
     [0x0015]: 0x05800003 = 0b00000101100000000000000000000011
0028 [0x0016]:         mov     r1, #4
     [0x0016]: 0x05880401 = 0b00000101100010000000010000000001
0029 [0x0017]:         add     r2, r0, r1
     [0x0017]: 0x00104040 = 0b00000000000100000100000001000000
0030 [0x0018]:         sub     r4, r0, r1, lsr #1
     [0x0018]: 0x01204441 = 0b00000001001000000100010001000001
0031 [0x0019]:         swi     #SysPutNum
     [0x0019]: 0x06800401 = 0b00000110100000000000010000000001
0032 [0x001a]:         mov     r4, r0
     [0x001a]: 0x05a04000 = 0b00000101101000000100000000000000
0033 [0x001b]:         mov     r0, #'\n
WARM Assembly of phase2SIMPLE.as                                        Page 2

Line [ Addr ]
     [0x001b]: 0x05800205 = 0b00000101100000000000001000000101
0034 [0x001c]:         swi     #SysPutChar
     [0x001c]: 0x06800003 = 0b00000110100000000000000000000011
0035 [0x001d]:         mov     r0, r4
     [0x001d]: 0x05804100 = 0b00000101100000000100000100000000
0036 [0x001e]:         sub     r0, r0, r2
     [0x001e]: 0x01004080 = 0b00000001000000000100000010000000
0037 [0x001f]:         add     r2, r0, r2, lsl #1
     [0x001f]: 0x00104081 = 0b00000000000100000100000010000001
0038 [0x0020]:         mov     r0, r2
     [0x0020]: 0x05804080 = 0b00000101100000000100000010000000
0039 [0x0021]:         swi     #SysPutNum
     [0x0021]: 0x06800401 = 0b00000110100000000000010000000001
0040           
0041 [0x0022]:         swi     #SysHalt
     [0x0022]: 0x06800000 = 0b00000110100000000000000000000000

-------------------------------------------------------------------------------
Symbols defined:
        five=21             four=16              one=0             three=11    
         two=5      
-------------------------------------------------------------------------------
Assembled 35 instructions at 714.29 instructions per second.
